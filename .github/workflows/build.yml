name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: windows-latest
            platform: win32
            arch: ia32
            npm_config_arch: ia32
          - os: windows-latest
            platform: win32
            arch: arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: alpine
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Install Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            test/project/v6/package-lock.json
            test/project/v7/package-lock.json
      - name: Install Node dependencies
        run: npm ci
        env:
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - name: Set target variable
        shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - name: Package VSIX
        run: npm run package -- --target ${{ env.target }}
      - name: Archive VSIX
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.target }}
          path: '*.vsix'

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Install Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            test/project/v6/package-lock.json
            test/project/v7/package-lock.json
      - name: Install Node dependencies
        run: npm ci
      - name: Test
        run: npm run test -- --coverage
      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint
      - name: Format
        run: npm run format

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Install Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            test/project/v6/package-lock.json
            test/project/v7/package-lock.json
      - name: Install Node dependencies
        id: install
        run: npm ci
      - uses: actions/download-artifact@v3.0.2
      - name: Publish to marketplace
        run: npm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Read changelog
        uses: yashanand1910/standard-release-notes@v1.3.0
        id: changelog
        with:
          version: ${{ github.ref }}
      - name: Create release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.vsix'
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: ${{ steps.changelog.outputs.release_notes }}
