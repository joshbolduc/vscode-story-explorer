// Vitest Snapshot v1

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/EmptyDefaultExport.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-csf-emptydefaultexport",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-csf-emptydefaultexport",
      "name": "EmptyDefaultExport",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-csf-emptydefaultexport--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/csf/EmptyDefaultExport",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/EmptyTitle.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-csf-emptytitle",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-csf-emptytitle",
      "name": "EmptyTitle",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-csf-emptytitle--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/csf/EmptyTitle",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/ExtraTitle.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-explicit-title",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-explicit-title",
      "name": "Explicit title",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-explicit-title--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/Explicit title",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/nested/WithoutTitle.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-csf-nested-withouttitle",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-csf-nested-withouttitle",
      "name": "WithoutTitle",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-csf-nested-withouttitle--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/csf/nested/WithoutTitle",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/nested/nested.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-csf-nested",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-csf-nested",
      "name": "nested",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-csf-nested--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/csf/nested",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/csf/withIndex/index.stories.js 1`] = `
{
  "id": "custom-title-prefix-second-level-csf-withindex",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-csf-withindex",
      "name": "withIndex",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-csf-withindex--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/csf/withIndex",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/mdx/MdxMeta.stories.mdx 1`] = `
{
  "id": "custom-title-prefix-second-level-mdx-mdxmeta",
  "isDocsOnly": true,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-mdx-mdxmeta--page",
      "name": "Page",
      "type": "docs",
    },
  ],
  "title": "Custom title prefix/Second level/mdx/MdxMeta",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/mdx/MdxMetaAndStory.stories.mdx 1`] = `
{
  "id": "custom-title-prefix-second-level-mdx-mdxmetaandstory",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-mdx-mdxmetaandstory",
      "name": "MdxMetaAndStory",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-mdx-mdxmetaandstory--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/mdx/MdxMetaAndStory",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/autoTitle/mdx/MdxStory.stories.mdx 1`] = `
{
  "id": "custom-title-prefix-second-level-mdx-mdxstory",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "custom-title-prefix-second-level-mdx-mdxstory",
      "name": "MdxStory",
      "type": "docs",
    },
    {
      "id": "custom-title-prefix-second-level-mdx-mdxstory--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Custom title prefix/Second level/mdx/MdxStory",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/BasicCsf.stories.js 1`] = `
{
  "id": "example-basic-csf",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-basic-csf",
      "name": "Basic CSF",
      "type": "docs",
    },
    {
      "id": "example-basic-csf--primary",
      "name": "Primary",
      "type": "story",
    },
    {
      "id": "example-basic-csf--secondary",
      "name": "Secondary",
      "type": "story",
    },
    {
      "id": "example-basic-csf--large",
      "name": "Large",
      "type": "story",
    },
    {
      "id": "example-basic-csf--small",
      "name": "Small",
      "type": "story",
    },
  ],
  "title": "Example/Basic CSF",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/CsfV1.stories.js 1`] = `
{
  "id": "example-csf-v1",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-csf-v1",
      "name": "CSF v1",
      "type": "docs",
    },
    {
      "id": "example-csf-v1--v-1-story-name",
      "name": "Renamed via non-hoisted story",
      "type": "story",
    },
    {
      "id": "example-csf-v1--v-2-v-1-story-name",
      "name": "v2 name override",
      "type": "story",
    },
    {
      "id": "example-csf-v1--v-2-v-1-story-name-empty",
      "name": "v1 name should be used",
      "type": "story",
    },
  ],
  "title": "Example/CSF v1",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/CsfWithMdx.stories.mdx 1`] = `
{
  "id": "example-mdx-importing-csf",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-mdx-importing-csf",
      "name": "MDX importing CSF",
      "type": "docs",
    },
    {
      "id": "example-mdx-importing-csf--basic",
      "name": "Basic",
      "type": "story",
    },
    {
      "id": "example-mdx-importing-csf--basic-2",
      "name": "Story name from MDX",
      "type": "story",
    },
    {
      "id": "example-mdx-importing-csf--basic-3",
      "name": "Basic 3",
      "type": "story",
    },
  ],
  "title": "Example/MDX importing CSF",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/CustomId.stories.js 1`] = `
{
  "id": "manually-specified-csf-story-id",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "manually-specified-csf-story-id",
      "name": "Custom ID CSF",
      "type": "docs",
    },
    {
      "id": "manually-specified-csf-story-id--story",
      "name": "Story",
      "type": "story",
    },
  ],
  "title": "Example/Custom ID CSF",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/CustomId.stories.mdx 1`] = `
{
  "id": "manually-specified-mdx-id",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "manually-specified-mdx-id",
      "name": "Custom ID MDX",
      "type": "docs",
    },
    {
      "id": "manually-specified-mdx-id--story",
      "name": "Story",
      "type": "story",
    },
  ],
  "title": "Example/Custom ID MDX",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/CustomName.stories.js 1`] = `
{
  "id": "example-custom-name",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-custom-name",
      "name": "Custom Name",
      "type": "docs",
    },
    {
      "id": "example-custom-name--custom-name",
      "name": "Custom story name",
      "type": "story",
    },
    {
      "id": "example-custom-name--overridden",
      "name": "Custom story name override",
      "type": "story",
    },
    {
      "id": "example-custom-name--named-via-variable",
      "name": "Custom story name var",
      "type": "story",
    },
    {
      "id": "example-custom-name--interpolated-name",
      "name": "Custom story name var in template string",
      "type": "story",
    },
    {
      "id": "example-custom-name--empty-name",
      "name": "Empty Name",
      "type": "story",
    },
    {
      "id": "example-custom-name--leading-whitespace",
      "name": "     Leading whitespace",
      "type": "story",
    },
  ],
  "title": "Example/Custom Name",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/DeepTree.stories.js 1`] = `
{
  "id": "example-deep-tree-with-several-kinds",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-deep-tree-with-several-kinds",
      "name": "Kinds",
      "type": "docs",
    },
    {
      "id": "example-deep-tree-with-several-kinds--story",
      "name": "Story",
      "type": "story",
    },
  ],
  "title": "Example/Deep/Tree/With/Several/Kinds",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/DocsOnly.stories.mdx 1`] = `
{
  "id": "example-mdx-docs-only",
  "isDocsOnly": true,
  "stories": [
    {
      "id": "example-mdx-docs-only--page",
      "name": "Page",
      "type": "docs",
    },
  ],
  "title": "Example/MDX Docs Only",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/DocsOnlyTop.stories.mdx 1`] = `
{
  "id": "mdx-docs-at-top-level",
  "isDocsOnly": true,
  "stories": [
    {
      "id": "mdx-docs-at-top-level--page",
      "name": "Page",
      "type": "docs",
    },
  ],
  "title": "MDX Docs at top level",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Excluded.stories.js 1`] = `
{
  "id": "test-exclusions-excluded",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-exclusions-excluded",
      "name": "Excluded",
      "type": "docs",
    },
    {
      "id": "test-exclusions-excluded--other-export",
      "name": "Other Export",
      "type": "story",
    },
  ],
  "title": "Test/Exclusions/Excluded",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/ExportStyles.stories.js 1`] = `
{
  "id": "example-export-styles",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-export-styles",
      "name": "Export Styles",
      "type": "docs",
    },
    {
      "id": "example-export-styles--normal-export",
      "name": "Normal Export",
      "type": "story",
    },
    {
      "id": "example-export-styles--alternative-export-name",
      "name": "Alternative Export Name",
      "type": "story",
    },
    {
      "id": "example-export-styles--export-name-overridden",
      "name": "Override name 3",
      "type": "story",
    },
  ],
  "title": "Example/Export Styles",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Form.stories.js 1`] = `
{
  "id": "example-form",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-form",
      "name": "Form",
      "type": "docs",
    },
    {
      "id": "example-form--form",
      "name": "Form",
      "type": "story",
    },
  ],
  "title": "Example/Form",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Hoisting.stories.js 1`] = `
{
  "id": "example-hoisting",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-hoisting",
      "name": "Hoisting",
      "type": "docs",
    },
    {
      "id": "example-hoisting--hoisting",
      "name": "Hoisting",
      "type": "story",
    },
  ],
  "title": "Example/Hoisting",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Included.stories.js 1`] = `
{
  "id": "test-exclusions-included",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-exclusions-included",
      "name": "Included",
      "type": "docs",
    },
    {
      "id": "test-exclusions-included--included-export",
      "name": "Included Export",
      "type": "story",
    },
  ],
  "title": "Test/Exclusions/Included",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/JsxExtension.stories.jsx 1`] = `
{
  "id": "example-jsx-extension",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-jsx-extension",
      "name": "JSX extension",
      "type": "docs",
    },
    {
      "id": "example-jsx-extension--story",
      "name": "Story",
      "type": "story",
    },
  ],
  "title": "Example/JSX extension",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Mdx2WithStories.stories.mdx 1`] = `
{
  "id": "example-mdx-with-stories",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-mdx-with-stories",
      "name": "MDX with Stories",
      "type": "docs",
    },
    {
      "id": "example-mdx-with-stories--mdx-first-story",
      "name": "MDX first story",
      "type": "story",
    },
    {
      "id": "example-mdx-with-stories--mdx-second-story",
      "name": "MDX second story",
      "type": "story",
    },
    {
      "id": "example-mdx-with-stories--mdx-story-3",
      "name": "MDX Story 3",
      "type": "story",
    },
  ],
  "title": "Example/MDX with Stories",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/MdxWithStoriesTop.stories.mdx 1`] = `
{
  "id": "mdx-with-stories-top",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "mdx-with-stories-top",
      "name": "MDX with stories, top",
      "type": "docs",
    },
    {
      "id": "mdx-with-stories-top--mdx-with-stories-top",
      "name": "MDX with stories, top",
      "type": "story",
    },
  ],
  "title": "MDX with stories, top",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/MergeOne.stories.js 1`] = `
{
  "id": "example-merge",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-merge",
      "name": "Merge",
      "type": "docs",
    },
    {
      "id": "example-merge--one",
      "name": "One",
      "type": "story",
    },
  ],
  "title": "Example/Merge",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/MergeTwo.stories.js 1`] = `
{
  "id": "example-merge",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-merge",
      "name": "Merge",
      "type": "docs",
    },
    {
      "id": "example-merge--two",
      "name": "Two",
      "type": "story",
    },
  ],
  "title": "Example/Merge",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Precedence.stories.mdx 1`] = `
{
  "id": "example-precedence",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-precedence",
      "name": "Precedence",
      "type": "docs",
    },
    {
      "id": "example-precedence--small",
      "name": "Story with name, story, body",
      "type": "story",
    },
    {
      "id": "example-precedence--story-with-name-body",
      "name": "Story with name, body",
      "type": "story",
    },
  ],
  "title": "Example/Precedence",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/SameName.stories.js 1`] = `
{
  "id": "example-with-same-name",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-with-same-name",
      "name": "With Same Name",
      "type": "docs",
    },
    {
      "id": "example-with-same-name--same-name",
      "name": "Same Name",
      "type": "story",
    },
  ],
  "title": "Example/With Same Name",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/SameNameChild.stories.js 1`] = `
{
  "id": "example-with-same-name-same-name",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-with-same-name-same-name",
      "name": "Same Name",
      "type": "docs",
    },
    {
      "id": "example-with-same-name-same-name--nested-story",
      "name": "Nested Story",
      "type": "story",
    },
  ],
  "title": "Example/With Same Name/Same Name",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/StoryDeclarations.stories.js 1`] = `
{
  "id": "test-story-declarations",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-story-declarations",
      "name": "Story Declarations",
      "type": "docs",
    },
    {
      "id": "test-story-declarations--const-declarator",
      "name": "Const Declarator",
      "type": "story",
    },
    {
      "id": "test-story-declarations--separate-declarator",
      "name": "Separate Declarator",
      "type": "story",
    },
    {
      "id": "test-story-declarations--separate-declarator-2",
      "name": "Separate declarator with story name",
      "type": "story",
    },
    {
      "id": "test-story-declarations--multiple-one",
      "name": "Multiple One",
      "type": "story",
    },
    {
      "id": "test-story-declarations--multiple-two",
      "name": "Multiple two (given name)",
      "type": "story",
    },
    {
      "id": "test-story-declarations--function-story",
      "name": "Renamed Function Story",
      "type": "story",
    },
    {
      "id": "test-story-declarations--separate-function-story",
      "name": "Separate Function Story",
      "type": "story",
    },
    {
      "id": "test-story-declarations--separate-function-story-2",
      "name": "Separate function story with story name",
      "type": "story",
    },
  ],
  "title": "Test/Story Declarations",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TitleInterpolation.stories.js 1`] = `
{
  "id": "example-title-interpolation",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "example-title-interpolation",
      "name": "Title Interpolation",
      "type": "docs",
    },
    {
      "id": "example-title-interpolation--primary",
      "name": "Primary",
      "type": "story",
    },
  ],
  "title": "Example/Title Interpolation",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/Top.stories.js 1`] = `
{
  "id": "top",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "top",
      "name": "Top",
      "type": "docs",
    },
    {
      "id": "top--top-level-story",
      "name": "Top Level Story",
      "type": "story",
    },
  ],
  "title": "Top",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TopHoisted.stories.js 1`] = `
{
  "id": "top-hoisted",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "top-hoisted",
      "name": "Top Hoisted",
      "type": "docs",
    },
    {
      "id": "top-hoisted--top-hoisted",
      "name": "Top Hoisted",
      "type": "story",
    },
  ],
  "title": "Top Hoisted",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TypeScript.stories.tsx 1`] = `
{
  "id": "test-typescript-sample",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-typescript-sample",
      "name": "Sample",
      "type": "docs",
    },
    {
      "id": "test-typescript-sample--type-script-story",
      "name": "Type Script Story",
      "type": "story",
    },
    {
      "id": "test-typescript-sample--type-script-typed-story",
      "name": "Type Script Typed Story",
      "type": "story",
    },
    {
      "id": "test-typescript-sample--type-script-typed-generic-story",
      "name": "Type Script Typed Generic Story",
      "type": "story",
    },
    {
      "id": "test-typescript-sample--type-script-type-assertion-story",
      "name": "Type Script Type Assertion Story",
      "type": "story",
    },
  ],
  "title": "Test/TypeScript/Sample",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TypeScriptAsMeta.stories.ts 1`] = `
{
  "id": "test-typescript-default-as-meta",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-typescript-default-as-meta",
      "name": "Default as Meta",
      "type": "docs",
    },
    {
      "id": "test-typescript-default-as-meta--type-script-story",
      "name": "Type Script Story",
      "type": "story",
    },
  ],
  "title": "Test/TypeScript/Default as Meta",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TypeScriptIdentifier.stories.ts 1`] = `
{
  "id": "test-typescript-typed-identifier",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-typescript-typed-identifier",
      "name": "Typed Identifier",
      "type": "docs",
    },
    {
      "id": "test-typescript-typed-identifier--type-script-story",
      "name": "Type Script Story",
      "type": "story",
    },
  ],
  "title": "Test/TypeScript/Typed Identifier",
}
`;

exports[`StoryExplorerStoryFile > parses story file file:///mock/basedir/project/v6/src/stories/TypeScriptIdentifierAsMeta.stories.ts 1`] = `
{
  "id": "test-typescript-identifier-exported-as-meta",
  "isDocsOnly": false,
  "stories": [
    {
      "id": "test-typescript-identifier-exported-as-meta",
      "name": "Identifier Exported as Meta",
      "type": "docs",
    },
    {
      "id": "test-typescript-identifier-exported-as-meta--type-script-story",
      "name": "Type Script Story",
      "type": "story",
    },
  ],
  "title": "Test/TypeScript/Identifier Exported as Meta",
}
`;
